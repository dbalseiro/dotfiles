#!/usr/bin/perl
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $icon;
my $icon_color;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "$percent%";

if ($status eq 'Discharging') {
	$full_text .= ' DIS';
} elsif ($status eq 'Charging') {
	$full_text .= ' CHR';
}

$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
	$full_text .= " ($1)";
}

if ($percent < 10) {
  $icon = "";
  $icon_color = "#FF4136";
} elsif ($percent < 30) {
  $icon = "";
  $icon_color = "#FF851B";
} elsif ($percent < 60) {
  $icon = "";
  $icon_color = "#FFDC00";
} elsif ($percent < 100) {
  $icon = "";
  $icon_color = "#2ECC40";
} else {
  $icon = "";
  $icon_color = "#01FF70";
}

# Print short_text, full_text
printf "<span><span color='%s'>%s  </span><span color='#555'>%s</span></span>\n", $icon_color, $icon, $full_text;
exit(0);
